{"ast":null,"code":"var _jsxFileName = \"D:\\\\AppDevelopments\\\\DigitalLegacyBox\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useContext(AuthContext);\n\n  // 如果正在加载，显示加载中\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 如果用户未登录，重定向到登录页面\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 如果用户已登录，显示子组件\n  return children;\n};\n_s(ProtectedRoute, \"CjcgYKvE1fHrpIpZCZsawF61wbc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","currentUser","loading","className","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/AppDevelopments/DigitalLegacyBox/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { currentUser, loading } = useContext(AuthContext);\r\n\r\n  // 如果正在加载，显示加载中\r\n  if (loading) {\r\n    return <div className=\"loading\">加载中...</div>;\r\n  }\r\n\r\n  // 如果用户未登录，重定向到登录页面\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // 如果用户已登录，显示子组件\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;;EAExD;EACA,IAAIO,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAJ,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;;EAEA;EACA,IAAI,CAACN,WAAW,EAAE;IAChB,oBAAOJ,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACC,EAAA,CAfIF,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}